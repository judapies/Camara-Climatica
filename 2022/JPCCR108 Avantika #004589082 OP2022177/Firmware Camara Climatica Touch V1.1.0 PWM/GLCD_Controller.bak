//Falta crear menu de ajuste de variables y de norma CFR21

#include <18F4685.h>
#device adc=10
#device HIGH_INTS=TRUE //Activamos niveles de prioridad
#fuses HS,WDT4096,NOPROTECT,NOLVP,NODEBUG,NOSTVREN,PUT,NOCPD,NOWRT,NOIESO,NOFCMEN,NOPBADEN,NOWRTC,NOWRTB,NOEBTR,NOEBTRB,NOCPB,NOXINST,NOLPT1OSC,NOMCLR,NOBROWNOUT,BORV42
#use delay(clock=20000000)
#use rs232(baud=115200, xmit=PIN_C6, rcv=PIN_C7, bits=8, parity=N)
#use i2c(Master,slow,sda=PIN_E2,scl=PIN_E1)
#priority rda
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <DS1302.c>
//#include <24512.c>

#define   DOOR          !input(PIN_E0)
#define   TERM          !input(PIN_A4)

//#define   AC1_on           output_bit(PIN_D1,0)
//#define   AC1_off          output_bit(PIN_D1,1)

#define   SSR1_on          output_bit(PIN_C1,1)
#define   SSR1_off         output_bit(PIN_C1,0)

#define   SSR2_on          output_bit(PIN_C2,1)
#define   SSR2_off         output_bit(PIN_C2,0)

#define   AC2_on           output_bit(PIN_D0,0)
#define   AC2_off          output_bit(PIN_D0,1)

#define   AC3_on           output_bit(PIN_D2,0)
#define   AC3_off          output_bit(PIN_D2,1)

#define   AC4_on           output_bit(PIN_D3,1)
#define   AC4_off          output_bit(PIN_D3,0)

#define   DC1_on           output_bit(PIN_B2,1)
#define   DC1_off          output_bit(PIN_B2,0)

#define   DC2_on           output_bit(PIN_B3,1)
#define   DC2_off          output_bit(PIN_B3,0)

#define   DC3_on           output_bit(PIN_B4,1)
#define   DC3_off          output_bit(PIN_B4,0)

#define   DC4_on           output_bit(PIN_B5,1)
#define   DC4_off          output_bit(PIN_B5,0)

#define   DC5_on           output_bit(PIN_B6,1)
#define   DC5_off          output_bit(PIN_B6,0)

#define   DC6_on           output_bit(PIN_B7,1)
#define   DC6_off          output_bit(PIN_B7,0)

#define   Buzzer_on        output_bit(PIN_C0,1)
#define   Buzzer_off       output_bit(PIN_C0,0)

#define   Display_on       output_bit(PIN_D4,1)
#define   Display_off      output_bit(PIN_D4,0)

#define   Ventilador_on    output_bit(PIN_D1,0)
#define   Ventilador_off   output_bit(PIN_D1,1)


#define OFF 0
#define ON  1
#define anchoGrafica  152.0

#define desvio                          0.5
#define Control_PWM  1

//Comunicacion//------------------------
byte SlaveA0Tx[0X20];
byte dato=0;            //Contendrá la información a enviar o recibir
byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C
byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato

int8 Regular[12]={0,3,3,6,1,4,6,2,5,0,3,5};
int8 Bisiesto[12]={0,3,4,0,2,5,0,3,6,1,4,6};

short desconectoTemperatura=OFF,desconectoHumedad=OFF,graficaa=OFF,flagMotor=OFF,estadoSSR2=OFF;
int8 T1Humedad=0,T2Humedad=0,T3Humedad=0,tDisplay=0;
int16 tdehumidificador,thumidificador,data=0,data2=0,datacount=0,pwm2=0,tDefrost=0,tCongela=0,tPuerta=0;

int8 temperaturaSeleccionada=0,Vel1=0;  
int8 i=0,n=0,Opcion2=0,Derivativo=0,Integral=0,MediaMovil=0,MediaMovil2=0,Tciclo=0,Ajuste=0,Ajusten=0,Ajuste2=0,Ajusten2=0,Modulo=0,Ajusto=0;
int16 derivativo_ant=0,tem16=0,equilibrio=0;
float Setpoint=0,SetpointAnt=0;
int32 tGrafica=0;
short dibujo=0,pulsoAumentar=0,pulsoDisminuir=0,flagBorrado=0,estadoSSR=0,estadoBuzzer=0,abrioPuerta=0,alarmaSobreT=0;
short inicioControlT=0,inicioControlH=0;
float Ganancia=0,Ganancia2=0,GananciaIn=0,Setpoint1=0,Setpoint2=0,Setpoint3=0;
int32  Temperature2=0;

#define RX_BUFFER_SIZE  10
char Rx_Buffer[RX_BUFFER_SIZE+1];
char Rx_Buffer2[RX_BUFFER_SIZE+1];
int8 RX_Wr_Index=0;

int16 pwm1=0;
int8 Dato2=0,Dato_Exitoso=0,Menu=0,MenuAntt=0,z=0,TipoClave=0,Segmentos=0,CicloLibre=0,Opcion=0,h=0,l=0;
int8 Dia=0,Mes=0,Year=0,Hora=0,Minuto=0,Segundo=0,dow=0;
short Inicio=0,entro=0,GuardaEEPROM=0,rampa=0,Minutos=0,Horas=0,flagTemperatura=0,x1=0,x10=0,x100=0,Enfria=0,envioUSB=0,flagRed=0;
short estadoDC1=OFF,estadoDC2=OFF,estadoDC3=OFF,estadoDC4=OFF,estadoDC5=OFF;
int8 Password[4];
int8 tiempo_esterilizacion=0,y=0,hEst=0,mEst=0,hEstp=0,mEstp=0,hEstpAnt=0,mEstpAnt=0,Segmento=0,conteo=0;
int16 tiemporeset=0,TiempoControl=0,tiemporecta=0,tiemposetpoint=0,tinicio=0,tiempocalentamiento=0,tiempoup=0,tiempodn=0;
short mensaje=0,Lectura2=0,flag_setpoint=0,flag_tiempocalentamiento=0,Lectura=0,flagup=0,flagdn=0,flagRampa=0,flag_calcula=0,flag_ajuste=0,flag_ajuste2=0;
short Finalizo=0,conteoPregunta=0,imprime=0,Infinito=0,flagControlT=0,flagControlH=0,Controlando=0,flag_clear2=0,flag_ganancia=0,flag_clear=0;
float X[2]={0.0,0.0};
float Temperatura=0,Temperatura2=0,Aumento=0,PendienteActual=0,DifPendiente=0,TempeInicial=0,Pendiente=0,TemperaturaIdeal=0,PotenciaEntregada=0,Tpulso=0,Tpulso2=0,penInicial=0,penMufla=0.5;
float error=0,Potencia=0,Potencia2=0,TpulsoMax=0,Tpulsomin=0;
int16 TiempoActual=0,MinutosActual=0,HorasActual=0,Tiempo=0,TiempoRampa=0,tPregunta=0;
int8 GananciaR=0,Pausa=0;
int16 damper=0;
float Prom=0,Prom2=0,V0=0,V1=0,Temperature=0,TemperaturaPt1002=0.0,Pt=0.0,Pt2=0.0;
int8 YearTx=0,MesTx=0,DiaTx=0,HoraTx=0,MinutoTx=0,dowTx=0;

int16 filt=0;
int8 entero=0;
int8 ll=0,hh=0;
int16 tmp=0;
float Temporal=0;
int8 k=0,kk=0,tEnvioUSB=0,tmuestreoUSB=0,tmuestreoUSB_ant=0,controlH=0,controlT=0,controlR=0,VelMotor=0;

int16 promedioT1[60];
int16 promedioT2[60];
int16 promediolm35[20];

int16 tiempos=0,tiempos3=0,tiempoctrl=0,Tc=0,Tp=0,Tp2=0,tTermostato=0,tpwm1=0,tpwm2=0,pwm=0;
short Control=0,Test=0;
short ip1=0,ip2=0,ip3=0,ip4=0,s1=0,s2=0,s3=0,s4=0,g1=0,g2=0,g3=0,g4=0,m1=0,m2=0,m3=0,m4=0,m5=0,m6=0,entroGrafica=OFF,actualizaNumeracion=OFF,config=OFF;
int8 horaGrafica[15],minutoGrafica[15];
float a=0.0011,b=2.3302,c=-244.0723;

typedef struct{
   int8 TemperaturaDec;
   int8 TemperaturaInt;
   float Horas;
   float Minutos;
   float Temperatura;
}Personalizado;
Personalizado rampas[20];

typedef struct{
   int8 Temperatura;
   int8 Hora;
   int8 Minuto;
}Grafica;
Grafica graph[700];

typedef struct{
   float control1,control2,control3,m1,m2,m3,patron1,patron2,patron3,b1,b2,b3;
}Calibracion;
Calibracion calib[2];

#include "Funciones.h"
#include "Menu.h"

#int_rda HIGH
void serial_rx_isr(){

   Dato2=fgetc();
   if(Dato2==0x65){//Inicio Comunicacion
      Inicio=1;
      RX_Wr_Index =0;
   }
   //Inicio=1;
   if(Inicio==1){
      Rx_Buffer2[RX_Wr_Index] = Dato2;
      RX_Wr_Index++;
   }
   if(RX_Wr_Index >= RX_BUFFER_SIZE){
      RX_Wr_Index =0;
      Inicio=0;
   }

   if(RX_Wr_Index==0){
      if(Rx_Buffer2[0]==0x65 && Rx_Buffer2[1]==0xff && Rx_Buffer2[2]==0xff && Rx_Buffer2[8]==0x00 && Rx_Buffer2[9]==0xff ){
         Dato_Exitoso=5;
      }else{
         Dato_Exitoso=10;
      }
   }
   //output_toggle(PIN_C0);
}

#int_TIMER1 
void temp1s(void){
   set_timer1(40536); // Se repite cada 5ms 
   tiempos++;
   tiempos3++;
   tiempoctrl++; 
   if(!TERM){
      tTermostato++;
   }else{
      tTermostato=0;
   }
   #if !defined(Control_PWM)
    if(Control==1){// && tcHotJnuVolt > BROKEN_TC_THRESHOLD){
        if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control
            tiempoctrl=0;
        // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005.
      
        if(tiempoctrl<=Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga.
            SSR1_on;
        else         
            SSR1_off;
        
        if(tiempoctrl<=Tp2) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga.
            SSR2_on;
        else         
            SSR2_off;
    }else{
        if(!Test){
            SSR1_off;
            SSR2_off;
        }
    }
    #endif
    
    if(tiempos3>=20){
        Lectura2=1;
        if(flagup)
            tiempoup++;
        if(flagdn)
            tiempodn++;   
        tiempos3=0;
    }
    
    if(tiempos>=200){  // Cuenta cada 5ms   
        tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++;mensaje=!mensaje;envioUSB=1;
        
        if(abrioPuerta)
            tPuerta++;
        else
            tPuerta=0;
        
        if(conteoPregunta)tPregunta++;
        
        if(flag_setpoint==1)
            tiemposetpoint++;
      
        if(tiempo_esterilizacion==1 || tiempo_esterilizacion==2){               
            tinicio++;
            tGrafica++;
        }
             
        if(flag_tiempocalentamiento==1)
            tiempocalentamiento++;
    }     
}

#ifdef Control_PWM
#int_TIMER2
void temp2s(void){
   set_timer2(206); // Se repite cada 5ms 
   tpwm1++;
   tpwm2++;
   
   if(tpwm1>=60) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control
      tpwm1=0;
      
   if(tpwm1<pwm1) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga.
      output_bit(PIN_C2,1);
   else         
      output_bit(PIN_C2,0);      
      
   if(tpwm2>=60) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control
      tpwm2=0;
      
   if(tpwm2<pwm2) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga.
      output_bit(PIN_C1,1);
   else         
      output_bit(PIN_C1,0);         
}
#endif

void main()
{ 
    delay_ms(1000);
    Display_off;
    enable_interrupts(int_rda);
    enable_interrupts(global);
    //enable_interrupts(INT_EXT_L2H);
    //setup_timer_0(RTCC_8_BIT|RTCC_DIV_256);
    //enable_interrupts(INT_TIMER0);
    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1);
    enable_interrupts(INT_TIMER1);
    #ifdef Control_PWM
    setup_timer_2(T2_DIV_BY_1, 206, 1);
    enable_interrupts(INT_TIMER2);
    #endif
    setup_adc_ports(AN0_TO_AN3);
    setup_adc(ADC_CLOCK_DIV_32 ); 
    delay_ms(1);
    setup_wdt(WDT_ON);
    delay_ms(1);
    Display_on;
    rtc_init();
    delay_ms(1);
    for (posicion=0;posicion<0x10;posicion++){
       SlaveA0Tx[posicion] = 0x00;
    }
    
    CyDelay(100);
    penInicial=penMufla;
    Opcion=1;Control=0;
    
    BUZZER_Write(1);
    LeeEEPROM();
    LimitaValores();
    BUZZER_Write(0);
    enable_interrupts(int_rda);
    enable_interrupts(global);
    
    for(i=0;i<80;i++){
        Temperatura=leePt100(MediaMovil);
        Temperatura2=leePt1002(MediaMovil);        
    }
    
    CyDelay(1);
    for(i=0;i<20;i++){
         if(rampas[i].Horas==0 && rampas[i].Minutos==0){
            Segmentos=i;  
            break;
         }else{
            Segmentos=i+1;  
         }
    } 
    
    PWM_WriteCompare1(0);
    PWM_WriteCompare2(0);
    
    if(controlT==0 && controlH==0 && controlR==0){
        Menu=120;
        flagControlT=OFF;
        flagControlH=OFF;      
        flagRampa=OFF;
        
        printf("page Bienvenida");
        SendDataDisplay();
        printf("bkcmd=0");
        SendDataDisplay();
        CyDelay(10);
    }else{
        if(controlR==1)
            flagRampa=ON;
        else
            flagRampa=OFF;
        
        if(controlT==1)
            flagControlT=ON;
        else
            flagControlT=OFF;
                
        Ganancia=GananciaR*(Setpoint/200);
        
        if((mEstp==0)&&(hEstp==0))
            Infinito=1;
        else
            Infinito=0;
        
        printf("page Principal");
        SendDataDisplay();
        printf("bkcmd=0");
        SendDataDisplay();
        CyDelay(10);
        Menu=20;
    }
   
    rtc_get_date(Dia,Mes,Year,dow);
    rtc_get_time(Hora,Minuto,Segundo);
    graph[0].Minuto=Minuto;
    graph[0].Hora=Hora;
    tmuestreoUSB_ant=tmuestreoUSB;
    VelMotor=0;
   
   while(true)
   {
      Display_on;
      rtc_get_date(Dia,Mes,Year,dow);
      rtc_get_time(Hora,Minuto,Segundo);
      Display_on;
      restart_wdt();
      Envio_Esclavos();
      
      if(!Test && !Finalizo){
         if(sensores(1)>0 || sensores(1)<1020){
             /*
             if(Temperatura<Setpoint+20  && !flagRampa){
                 CONTACTOR_Write(0);
                 alarmaSobreT=OFF;
             }else if(Temperatura>Setpoint+20 && !flagRampa){
                 CONTACTOR_Write(1);
                 alarmaSobreT=ON;
             }else if(Temperatura>80 && flagRampa){
                 CONTACTOR_Write(1);
                 alarmaSobreT=ON;
             }else{
                 CONTACTOR_Write(0);
                 alarmaSobreT=OFF;
             }
             */
             if(Temperatura>70){
                 CONTACTOR_Write(1);
                 alarmaSobreT=ON;
             }else{
                 CONTACTOR_Write(0);
                 alarmaSobreT=OFF;
             }
         }else{
             CONTACTOR_Write(1);
         }    
      }
      
        if(Lectura2){
            Lectura2=0;
            Temperatura=leePt100(MediaMovil);
            Temperatura2=leePt1002(MediaMovil);
            Temperature2=(int16)leeLM35(10);
            //Humedad=leeHumedad(MediaMovil2);
            //ReadSensorCalibrationData();
            //ReadUncompensatedTemperature();
            //ReadAndCalculateSensorData();
            if(!Test){
               if(Temperature2/10>=35){
                   AC3_on;
               }else if(Temperature2/10<30){
                   AC3_off;
               }
            }
        }
        
        //dataEthernet();
        dataUSB();
        LeeDisplay();
        leeMenus(); 
         
//_--------------------------------------------------------------------------------------------------------------------------------------------------------      
    if(Menu==15){//Menu de Clave Correcta
      if(!entro){
         CyDelay(800);
         entro=ON;
      }
      printf("page Principal");
      SendDataDisplay();
   }//Menu de Clave Correcta
//_--------------------------------------------------------------------------------------------------------------------------------------------------------      

//_--------------------------------------------------------------------------------------------------------------------------------------------------------      
    if(Menu==16){//Menu de Clave InCorrecta
      if(!entro){
         CyDelay(800);         
         entro=ON;
      }
      printf("page Clave");
      SendDataDisplay();
   }//Menu de Clave InCorrecta
//_--------------------------------------------------------------------------------------------------------------------------------------------------------      

//_--------------------------------------------------------------------------------------------------------------------------------------------------------
    if(Menu==20){ //Menu de Funcionamiento
      GuardaEEPROM=OFF;
      dibujo=OFF;
      conteoPregunta=OFF;
      tPregunta=0;
      if(Temperature2<40){
        printf("t7.txt=\"Incubadora JP Inglobal Ta:%ld°C\"",Temperature2);
      }else{
        printf("t7.txt=\"Incubadora JP Inglobal Ta:!Alta!\"");
      }
      SendDataDisplay();
      printf("fecha.txt=\"Fecha:%02u/%02u/20%02u    Hora: %02u:%02u:%02u\"",Dia,Mes,Year,Hora,Minuto,Segundo);
      SendDataDisplay();
      //printf("texto1.txt=\"Velocidad: %03u%%\"",Vel1*10);
      //SendDataDisplay();
      x1=ON;x10=OFF;x100=OFF;
      
      if(Rx_Buffer[4]==0x01){//Temperatura
         printf("page Tempe2");
         SendDataDisplay();
      }
      
      if(Rx_Buffer[4]==0x03){//Tiempo
         printf("page Tiempo");
         SendDataDisplay();
      }
      
      if(Rx_Buffer[4]==0x04){//Test de componentes
         printf("page Clave");
         SendDataDisplay();
         TipoClave=4;
      }
      
      if(Rx_Buffer[4]==0x05){//Cambio Clave
         printf("page Clave");
         SendDataDisplay();
         TipoClave=2;
      }
      
      if(Rx_Buffer[4]==0x06){//Fecha y Hora
         printf("page Fecha");
         SendDataDisplay();
         DiaTx=Dia;
         MesTx=Mes;
         YearTx=Year;
         HoraTx=Hora;
         MinutoTx=Minuto;
      }
      
      if(Rx_Buffer[4]==0x07){//Configuracion Parametros
         printf("page Clave");
         SendDataDisplay();
         TipoClave=1;
      }
      
      if(Rx_Buffer[4]==0x1a){//Configuracion Parametros
         printf("page Grafica");
         SendDataDisplay();         
         entroGrafica=ON;
      }
    
      if(desconectoHumedad){
        inicioControlH=OFF;
        flagControlH=OFF;
        flagRampa=OFF;
      }
        
      if(desconectoTemperatura){
        inicioControlT=OFF;
        flagControlT=OFF;
        flagRampa=OFF;
      }
      
      if(Rx_Buffer[4]==0x0a){//Configuracion Parametros
         printf("page Rampas");
         SendDataDisplay();
      }
      
      if(Finalizo==0){
            if(DOOR){
               abrioPuerta=OFF;
                printf("status.txt=\"Puerta Cerrada\""); 
                SendDataDisplay();
                if(Rx_Buffer[4]==0x08){//Inicia Control Temperatura
                    flagControlT=!flagControlT;
                    if(flagControlT)
                        inicioControlT=ON;
                    else
                        inicioControlT=OFF;
                    Rx_Buffer[4]=0x00;
                    Rx_Buffer2[4]=0x00;
                    Ganancia=GananciaR*(Setpoint/400);
                    if((mEstp==0)&&(hEstp==0))
                        Infinito=1;
                    else
                        Infinito=0;
                    EEPROM_WriteByte((int8)flagControlT,41);CyDelay(20);
                }
                
                if(Rx_Buffer[4]==0x0b){//Inicia Control Rampa
                    if(Segmentos>0 && !inicioControlH && !inicioControlT){
                        flagRampa=!flagRampa;
                        if(flagRampa){
                            // Configura parametros para inicio de rampa  
                            SetpointAnt=Setpoint;
                            hEstpAnt=hEstp;
                            mEstpAnt=mEstp;
                            TempeInicial=Temperatura;
                            Tiempo=(rampas[Segmento].Horas*3600)+(rampas[Segmento].Minutos*60);         
                            Setpoint=rampas[Segmento].Temperatura;                           
                            Pendiente=((Setpoint-TempeInicial)/Tiempo);
                            hEstp=rampas[Segmento].Horas;
                            mEstp=rampas[Segmento].Minutos;
                            flagControlH=ON;
                            flagControlT=ON;
                        }else{
                            Setpoint=SetpointAnt;
                            hEstp=hEstpAnt;
                            mEstp=mEstpAnt;
                            mEst=0;
                            hEst=0;
                            flagControlH=OFF;
                            flagControlT=OFF;
                        }
                    }
                    Rx_Buffer[4]=0x00;
                    Rx_Buffer2[4]=0x00;
                }
                if(flagRampa){
                    iniciaConteo(); 
                    printf("b4.pic=85");
                    SendDataDisplay();
                    printf("b6.pic=85");
                    SendDataDisplay();
                    
                    if(tTermostato>200 || Temperatura>80){
                        printf("statusT.txt=\"!Termostato!\"");      
                        SendDataDisplay();
                        PWM_WriteCompare1(0);
                        PWM_WriteCompare2(0);
                        Control=0;
                        Ganancia=GananciaR*(Setpoint/200);
                        BUZZER_Write(1);
                        CyDelay(300);
                        BUZZER_Write(0);
                        CyDelay(300);
                    }else{
                        controlaRampa();
                    }
                    printf("t8.txt=\"Paso %02u\"",Segmento+1);
                    //printf("t8.txt=\"%2.0f\"",Tiempo);
                    SendDataDisplay();
                }else{
                    printf("t8.txt=\"Info\"");
                    SendDataDisplay();
                    printf("b6.pic=84");
                    SendDataDisplay();
                    iniciaConteo();
            
                    if(flagControlT){
                        printf("b4.pic=85");
                        SendDataDisplay();
                        controlaTemperatura();
                    }else{
                        printf("statusT.txt=\"Detenido\"");
                        SendDataDisplay();
                        printf("b4.pic=84");
                        SendDataDisplay();
                        PWM_WriteCompare1(0);
                        PWM_WriteCompare2(0);
                        Control=0;
                        Tpulso=0.0;
                        Tpulso2=0.0;
                        VelMotor=0;
                        flagMotor=OFF;
                        Ventilador_off;
                    }
                }
            }else if(!DOOR){
               abrioPuerta=ON;
               if(tPuerta>=5){
                  thumidificador=0;
                  tdehumidificador=0;
                  printf("b4.pic=84");
                  SendDataDisplay();
                  printf("b6.pic=84");
                  SendDataDisplay();
                  Control=0;
                  VelMotor=0;
                  flagMotor=OFF;
                  flag_tiempocalentamiento=0;
                  Ganancia=(float)GananciaR*(Setpoint/400);
                  Ganancia2=Ganancia;
                  tiempo_esterilizacion=0;
                  PWM_WriteCompare1(0);
                  PWM_WriteCompare2(0);
                  Tpulso=0.0;
                  Tpulso2=0.0;
                  flag_clear2=1;
                  flag_ganancia=0;
                  printf("statusT.txt=\"-----\"");
                  SendDataDisplay();
               }
               printf("status.txt=\"Puerta Abierta\"");
               SendDataDisplay();
               Ventilador_off;
            }
      }else{
         //CR7_Write(1);//Humidificador_off;
         //CR5_Write(0);//Dehumidificador_off;
         //CR1_Write(0);
         //CR2_Write(0);
         //CR3_Write(0);
         //CR4_Write(0);
         //CR6_Write(1);
         //CR8_Write(0);//Bomba OFF;
         Ventilador_off;
         printf("t8.txt=\"Paso --\"");
         SendDataDisplay();
         printf("status.txt=\"Reinicie el equipo\"");
         SendDataDisplay();
         PWM_WriteCompare1(0);
         PWM_WriteCompare2(0);
         Control=0;
         Tpulso=0.0;
         Tpulso2=0.0;
         tiempo_esterilizacion=0;
         flagRampa=OFF;
         flagControlT=OFF;
         ApagaSalidas();
         printf("b4.pic=84");
         SendDataDisplay();
         printf("b6.pic=84");
         SendDataDisplay();
         printf("statusT.txt=\"Finalizado\"");
         SendDataDisplay();
         VelMotor=0;
         flagMotor=OFF;
      }
      
      if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura
      {                   
         Lectura=0;
         //sprintf(displayStr,"texto1.txt=\"T. Ambiente:%02ld°C\"",Temperature2);
         //escribeDisplay1(displayStr);
         Potencia=(100.0/Tciclo)*Tpulso; 
         Potencia2=(100.0/Tciclo)*Tpulso2;  
 //----------------Muestra Temperatura--------------------------
         if(sensores(1)>0){
            printf("temperatura.txt=\"T1:%1.1f°C\"", Temperatura); 
            desconectoTemperatura=OFF;
         }else{
             printf("temperatura.txt=\"T1:-----\""); 
             desconectoTemperatura=ON;
         }
         SendDataDisplay();
        
         if(sensores(2)>0){
             printf("temperatura2.txt=\"T2:%1.1f°C\"", Temperatura2); 
         }else{
             printf("temperatura2.txt=\"T2:-----\""); 
         }
         SendDataDisplay();
         printf("stemperatura.txt=\"SET:%1.1f°C\"",Setpoint);
         SendDataDisplay();
         printf("stiempo.txt=\"SET:%02u:%02u (HH:MM)\"",hEstp,mEstp);
         SendDataDisplay();
         printf("tiempo.txt=\"%02u:%02u \"",hEst,mEst);
         SendDataDisplay();
         printf("potT.txt=\"Pot. T:%2.0f %%\"",Potencia);
         //printf("potT.txt=\"Pot:%2.0f%% %2.1f %2.4f\"",Potencia,TemperaturaIdeal,Pendiente);
         SendDataDisplay();
      } 
      
      // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura.
      if((mEstp>0)||(hEstp>0)){
         CuentaTiempo();  
         if(flagRampa){
            if((mEst>=mEstp)&&(hEst>=hEstp)&& Finalizo==0){
               flag_calcula=0;
               if(Segmento<Segmentos-1){
                  Segmento++;
                  hEst=0;
                  mEst=0;
               }else{
                  Finalizo=1;
               }
               for(i=0;i<2;i++){
                  BUZZER_Write(1);
                  CyDelay(600);
                  //CyWdtClear();
                  BUZZER_Write(0);
                  CyDelay(600);
                  //CyWdtClear();
               }
            }
         }else{
            if((mEst>=mEstp)&&(hEst>=hEstp)&& tiempo_esterilizacion==1){
               if(flag_clear==0){
                  tiempo_esterilizacion=0;
                  Pausa=2;
                  flag_clear=1;
                  SSR1_off;
                  SSR2_off;
                  Control=0;
                  Tpulso=0.0;
                  Tpulso2=0.0;
                  flag_ganancia=0;
                  Finalizo=1;
               }
               printf("status.txt=\"Finalizado\"");
               SendDataDisplay();
               ApagaSalidas();
               for(i=0;i<2;i++){
                  BUZZER_Write(1);
                  CyDelay(600);
                  //CyWdtClear();
                  BUZZER_Write(0);
                  CyDelay(600);
                  //CyWdtClear();
               }
            }
         }   
      }
      
      if(Rx_Buffer[4]==0x0c){//Calibracion
          printf("page Clave");
         SendDataDisplay();
         TipoClave=5;
      }
    
      if(Rx_Buffer[4]==0x0d){//Configuracion Damper
          //escribeDisplay1("page Damper");
          //Ganancia=(float)GananciaR;
      }
    }//Menu de Funcionamiento
//_--------------------------------------------------------------------------------------------------------------------------------------------------------       


//_--------------------------------------------------------------------------------------------------------------------------------------------------------
     if(Menu==100){ //Menu de Configuración de Parametros de Control
      config=OFF;
      if(Opcion2>11)
         Opcion2=1;
      if(Opcion2<1)
         Opcion2=11;
      
      if(Opcion2==1){
         printf("Config.t2c.txt=\"Proporcional\"");      
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",(int8)GananciaR);
         SendDataDisplay();
         
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida
            if(Rx_Buffer[4]==0x0a){
               GananciaR+=1.0;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida
            if(Rx_Buffer[4]==0x0b){
               GananciaR-=1.0;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
         
         if(GananciaR>20)
            GananciaR=1;
         if(GananciaR<1)
            GananciaR=20;
      }else if(Opcion2==2){
         printf("Config.t2c.txt=\"Derivativo\"");
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Derivativo);
         SendDataDisplay();
        
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               Derivativo++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;                           
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida
            if(Rx_Buffer[4]==0x0b){
               Derivativo--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;                           
            }
         }
         
         if(Derivativo>80)
            Derivativo=1;
         if(Derivativo<1)
            Derivativo=80;
      }else if(Opcion2==3){
         printf("Config.t2c.txt=\"Integral\"");
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Integral);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida
            if(Rx_Buffer[4]==0x0a){
               Integral++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida            
            if(Rx_Buffer[4]==0x0b){
               Integral--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;                           
            }
         }
         
         if(Integral>4)
            Integral=1;
         if(Integral<1)
            Integral=4;
      }else if(Opcion2==4){
         printf("Config.t2c.txt=\"Tciclo\"");
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Tciclo);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               Tciclo+=1.0;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida
            if(Rx_Buffer[4]==0x0b){
               Tciclo-=1.0;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
         
         if(Tciclo>20)
            Tciclo=5;
         if(Tciclo<5)
            Tciclo=20;
      }else if(Opcion2==5){
         printf("Config.t2c.txt=\"Ajuste +\"");  
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Ajuste);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               if(Ajuste<100)
                  Ajuste++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida            
            if(Rx_Buffer[4]==0x0b){
               if(Ajuste>0)
                  Ajuste--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
      }else if(Opcion2==6){
         printf("Config.t2c.txt=\"Ajuste -\"");
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Ajusten);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               if(Ajusten<100)
                  Ajusten++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }         
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida            
            if(Rx_Buffer[4]==0x0b){
               if(Ajusten>0)
                  Ajusten--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
      }else if(Opcion2==7){
         printf("Config.t2c.txt=\"Media\"");    
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",MediaMovil);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               if(MediaMovil<60)
                  MediaMovil++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida
            if(Rx_Buffer[4]==0x0b){
               if(MediaMovil>10)
                  MediaMovil--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }            
         }
      }else if(Opcion2==8){
         printf("Config.t2c.txt=\"Ajuste2 +\"");  
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Ajuste2);
         SendDataDisplay();     
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               if(Ajuste2<100)
                  Ajuste2++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida            
            if(Rx_Buffer[4]==0x0b){
               if(Ajuste2>0)
                  Ajuste2--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
      }else if(Opcion2==9){
         printf("Config.t2c.txt=\"Ajuste2 -\"");
         SendDataDisplay();
         printf("t3c.txt=\"%u\"",Ajusten2);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){
               if(Ajusten2<100)
                  Ajusten2++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }         
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida            
            if(Rx_Buffer[4]==0x0b){
               if(Ajusten2>0)
                  Ajusten2--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
      }else if(Opcion2==10){
         printf("Config.t2c.txt=\"Muestreo\"");
         SendDataDisplay();
         printf("t3c.txt=\"%03u\"",tmuestreoUSB);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida            
            if(Rx_Buffer[4]==0x0a){               
                  tmuestreoUSB++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }         
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida         
            if(Rx_Buffer[4]==0x0b){
                  tmuestreoUSB--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
        if(tmuestreoUSB<1)tmuestreoUSB=255;
        if(tmuestreoUSB>254)tmuestreoUSB=1;
      }else if(Opcion2==11){
         printf("Config.t2c.txt=\"Equilibrio\"");
         SendDataDisplay();
         printf("t3c.txt=\"%2.1f\"",((float)equilibrio)/10);
         SendDataDisplay();
         if(Rx_Buffer[4]==0x0a){//Tecla Arriba Oprimida
            CyDelay(20);
            if(Rx_Buffer[4]==0x0a){               
                  equilibrio++;
               Rx_Buffer[4]=0x00;  
               Rx_Buffer2[4]=0x00;            
            }         
         }
            
         if(Rx_Buffer[4]==0x0b){//Tecla Abajo Oprimida
            CyDelay(20);
            if(Rx_Buffer[4]==0x0b){
                  equilibrio--;
               Rx_Buffer[4]=0x00;
               Rx_Buffer2[4]=0x00;            
            }
         }
        if(equilibrio>20)
            equilibrio=1;
        if(equilibrio<1)
            equilibrio=20;
      }    
      
      if(Rx_Buffer[4]==0x0c){//Tecla Izquierda Oprimida        
         if(Rx_Buffer[4]==0x0c){
            Opcion2++;
            Rx_Buffer[4]=0x00;  
            Rx_Buffer2[4]=0x00;            
         }
      }
         
      if(Rx_Buffer[4]==0x0d){//Tecla Derecha Oprimida         
         if(Rx_Buffer[4]==0x0d){
            Opcion2--;
            Rx_Buffer[4]=0x00;
            Rx_Buffer2[4]=0x00;            
         }
      }
      
      if(Rx_Buffer[4]==0x11){//Tecla Regresar
         CyDelay(20);
         if(Rx_Buffer[4]==0x11){
            if(!GuardaEEPROM){
                
               EEPROM_WriteByte(convert8(tDefrost,0),5);CyDelay(10);
               EEPROM_WriteByte(convert8(tDefrost,1),6);CyDelay(10);
               EEPROM_WriteByte(convert8(tCongela,0),7);CyDelay(10);
               EEPROM_WriteByte(convert8(tCongela,1),8);CyDelay(10);
               EEPROM_WriteByte(tDisplay,9);
               CyDelay(10);   
               EEPROM_WriteByte(Integral,32);
               CyDelay(10);
               EEPROM_WriteByte(Derivativo,31);
               CyDelay(10);
               EEPROM_WriteByte((int8)GananciaR,30);
               CyDelay(10);
               EEPROM_WriteByte(Ajuste,34);
               CyDelay(10);
               EEPROM_WriteByte(Ajusten,35);
               CyDelay(10);
               EEPROM_WriteByte(MediaMovil,36);
               CyDelay(10);
               EEPROM_WriteByte(Tciclo,33);
               CyDelay(10);
               EEPROM_WriteByte(Ajuste2,37);
               CyDelay(10);
               EEPROM_WriteByte(Ajusten2,38);
               CyDelay(10);
               EEPROM_WriteByte(MediaMovil2,39);
               CyDelay(10);
               Ganancia=GananciaR*(Setpoint/200);
               EEPROM_WriteByte(tmuestreoUSB,40);
               CyDelay(10);
               EEPROM_WriteByte(equilibrio,3);
               CyDelay(10);
               GuardaEEPROM=ON;
            }
            printf("page Principal");
            SendDataDisplay();
         }
      }
    }//Menu de Configuración de Parametros de Control
//_--------------------------------------------------------------------------------------------------------------------------------------------------------           
//_-------------------------------------------------------Display 2----------------------------------------------------------------------------------------                

   }
}
